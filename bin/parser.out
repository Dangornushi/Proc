Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVIDE
    END
    TIMES

Grammar

Rule 0     S' -> expr
Rule 1     expr -> NAME NAME EQUAL expr
Rule 2     expr -> NAME NAME PLUS SENT
Rule 3     expr -> NAME NAME EQUAL NAME PLUS NAME
Rule 4     expr -> NAME NAME EQUAL NAME MINUS NAME
Rule 5     expr -> NAME NAME MINUS SENT
Rule 6     SENT -> expr
Rule 7     expr -> NAME NAME LKAKKO NAME RKAKKO STA
Rule 8     expr -> NUMBER

Terminals, with rules where they appear

DIVIDE               : 
END                  : 
EQUAL                : 1 3 4
LKAKKO               : 7
MINUS                : 4 5
NAME                 : 1 1 2 2 3 3 3 3 4 4 4 4 5 5 7 7 7
NUMBER               : 8
PLUS                 : 2 3
RKAKKO               : 7
STA                  : 7
TIMES                : 
error                : 

Nonterminals, with rules where they appear

SENT                 : 2 5
expr                 : 1 6 0

Parsing method: LALR

state 0

    (0) S' -> . expr
    (1) expr -> . NAME NAME EQUAL expr
    (2) expr -> . NAME NAME PLUS SENT
    (3) expr -> . NAME NAME EQUAL NAME PLUS NAME
    (4) expr -> . NAME NAME EQUAL NAME MINUS NAME
    (5) expr -> . NAME NAME MINUS SENT
    (7) expr -> . NAME NAME LKAKKO NAME RKAKKO STA
    (8) expr -> . NUMBER

    NAME            shift and go to state 2
    NUMBER          shift and go to state 3

    expr                           shift and go to state 1

state 1

    (0) S' -> expr .



state 2

    (1) expr -> NAME . NAME EQUAL expr
    (2) expr -> NAME . NAME PLUS SENT
    (3) expr -> NAME . NAME EQUAL NAME PLUS NAME
    (4) expr -> NAME . NAME EQUAL NAME MINUS NAME
    (5) expr -> NAME . NAME MINUS SENT
    (7) expr -> NAME . NAME LKAKKO NAME RKAKKO STA

    NAME            shift and go to state 4


state 3

    (8) expr -> NUMBER .

    $end            reduce using rule 8 (expr -> NUMBER .)


state 4

    (1) expr -> NAME NAME . EQUAL expr
    (2) expr -> NAME NAME . PLUS SENT
    (3) expr -> NAME NAME . EQUAL NAME PLUS NAME
    (4) expr -> NAME NAME . EQUAL NAME MINUS NAME
    (5) expr -> NAME NAME . MINUS SENT
    (7) expr -> NAME NAME . LKAKKO NAME RKAKKO STA

    EQUAL           shift and go to state 5
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    LKAKKO          shift and go to state 8


state 5

    (1) expr -> NAME NAME EQUAL . expr
    (3) expr -> NAME NAME EQUAL . NAME PLUS NAME
    (4) expr -> NAME NAME EQUAL . NAME MINUS NAME
    (1) expr -> . NAME NAME EQUAL expr
    (2) expr -> . NAME NAME PLUS SENT
    (3) expr -> . NAME NAME EQUAL NAME PLUS NAME
    (4) expr -> . NAME NAME EQUAL NAME MINUS NAME
    (5) expr -> . NAME NAME MINUS SENT
    (7) expr -> . NAME NAME LKAKKO NAME RKAKKO STA
    (8) expr -> . NUMBER

    NAME            shift and go to state 9
    NUMBER          shift and go to state 3

    expr                           shift and go to state 10

state 6

    (2) expr -> NAME NAME PLUS . SENT
    (6) SENT -> . expr
    (1) expr -> . NAME NAME EQUAL expr
    (2) expr -> . NAME NAME PLUS SENT
    (3) expr -> . NAME NAME EQUAL NAME PLUS NAME
    (4) expr -> . NAME NAME EQUAL NAME MINUS NAME
    (5) expr -> . NAME NAME MINUS SENT
    (7) expr -> . NAME NAME LKAKKO NAME RKAKKO STA
    (8) expr -> . NUMBER

    NAME            shift and go to state 2
    NUMBER          shift and go to state 3

    SENT                           shift and go to state 11
    expr                           shift and go to state 12

state 7

    (5) expr -> NAME NAME MINUS . SENT
    (6) SENT -> . expr
    (1) expr -> . NAME NAME EQUAL expr
    (2) expr -> . NAME NAME PLUS SENT
    (3) expr -> . NAME NAME EQUAL NAME PLUS NAME
    (4) expr -> . NAME NAME EQUAL NAME MINUS NAME
    (5) expr -> . NAME NAME MINUS SENT
    (7) expr -> . NAME NAME LKAKKO NAME RKAKKO STA
    (8) expr -> . NUMBER

    NAME            shift and go to state 2
    NUMBER          shift and go to state 3

    SENT                           shift and go to state 13
    expr                           shift and go to state 12

state 8

    (7) expr -> NAME NAME LKAKKO . NAME RKAKKO STA

    NAME            shift and go to state 14


state 9

    (3) expr -> NAME NAME EQUAL NAME . PLUS NAME
    (4) expr -> NAME NAME EQUAL NAME . MINUS NAME
    (1) expr -> NAME . NAME EQUAL expr
    (2) expr -> NAME . NAME PLUS SENT
    (3) expr -> NAME . NAME EQUAL NAME PLUS NAME
    (4) expr -> NAME . NAME EQUAL NAME MINUS NAME
    (5) expr -> NAME . NAME MINUS SENT
    (7) expr -> NAME . NAME LKAKKO NAME RKAKKO STA

    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    NAME            shift and go to state 4


state 10

    (1) expr -> NAME NAME EQUAL expr .

    $end            reduce using rule 1 (expr -> NAME NAME EQUAL expr .)


state 11

    (2) expr -> NAME NAME PLUS SENT .

    $end            reduce using rule 2 (expr -> NAME NAME PLUS SENT .)


state 12

    (6) SENT -> expr .

    $end            reduce using rule 6 (SENT -> expr .)


state 13

    (5) expr -> NAME NAME MINUS SENT .

    $end            reduce using rule 5 (expr -> NAME NAME MINUS SENT .)


state 14

    (7) expr -> NAME NAME LKAKKO NAME . RKAKKO STA

    RKAKKO          shift and go to state 17


state 15

    (3) expr -> NAME NAME EQUAL NAME PLUS . NAME

    NAME            shift and go to state 18


state 16

    (4) expr -> NAME NAME EQUAL NAME MINUS . NAME

    NAME            shift and go to state 19


state 17

    (7) expr -> NAME NAME LKAKKO NAME RKAKKO . STA

    STA             shift and go to state 20


state 18

    (3) expr -> NAME NAME EQUAL NAME PLUS NAME .

    $end            reduce using rule 3 (expr -> NAME NAME EQUAL NAME PLUS NAME .)


state 19

    (4) expr -> NAME NAME EQUAL NAME MINUS NAME .

    $end            reduce using rule 4 (expr -> NAME NAME EQUAL NAME MINUS NAME .)


state 20

    (7) expr -> NAME NAME LKAKKO NAME RKAKKO STA .

    $end            reduce using rule 7 (expr -> NAME NAME LKAKKO NAME RKAKKO STA .)

